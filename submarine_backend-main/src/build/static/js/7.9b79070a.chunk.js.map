{"version":3,"sources":["views/custom/settings/AddNewModal.js","views/custom/settings/Datatable.js","views/custom/settings/index.js"],"names":["AddNewModal","open","handleModal","mode","data","handleSubmitModal","handleEditChange","CloseBtn","className","size","onClick","isOpen","toggle","modalClassName","contentClassName","close","tag","for","id","placeholder","value","key","onChange","event","description","color","outline","Datatable","dispatch","useDispatch","store","useSelector","state","setting","useState","loading","setLoading","modal","setModal","setMode","currentPage","column","direction","rowsPerPage","searchValue","filter","setFilter","setData","count","Math","ceil","total","useEffect","getData","handleSort","filterData","sm","type","e","parseInt","target","handlePerPage","bsSize","striped","responsive","style","whiteSpace","cursor","map","element","index","caret","href","preventDefault","handleEditRow","confirm","deleteEvent","handleDeleteRow","previousLabel","nextLabel","breakLabel","pageCount","marginPagesDisplayed","pageRangeDisplayed","activeClassName","forcePage","onPageChange","page","selected","handlePagination","pageClassName","breakClassName","nextLinkClassName","pageLinkClassName","breakLinkClassName","previousLinkClassName","nextClassName","previousClassName","containerClassName","addEvent","updateEvent","position","top","left","width","height","backgroundColor","opacity","zIndex","fill","memo","Tables"],"mappings":"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","file":"static/js/7.9b79070a.chunk.js","sourcesContent":["import { User, AlignCenter, Info, X } from 'react-feather'\n\n// ** Reactstrap Imports\nimport {\n  Button,\n  Modal,\n  ModalHeader,\n  ModalBody,\n  InputGroup,\n  InputGroupText,\n  Input,\n  Label\n} from 'reactstrap'\n\nconst AddNewModal = ({\n  open,\n  handleModal,\n  mode,\n  data,\n  handleSubmitModal,\n  handleEditChange\n}) => {\n\n  // ** Custom close btn\n  const CloseBtn = <X className='cursor-pointer' size={15} onClick={handleModal} />\n\n  return (\n    <Modal\n      isOpen={open}\n      toggle={handleModal}\n      className='sidebar-sm'\n      modalClassName='modal-slide-in'\n      contentClassName='pt-0'\n    >\n      <ModalHeader className='mb-3' toggle={handleModal} close={CloseBtn} tag='div'>\n        <h5 className='modal-title'>{mode === 'NEW' ? 'New Record' : 'Edit Record'}</h5>\n      </ModalHeader>\n      <ModalBody className='flex-grow-1'>\n        <div className='mb-1'>\n          <Label for='Key'>* Key</Label>\n          <InputGroup>\n            <InputGroupText>\n              <User size={15} />\n            </InputGroupText>\n            <Input id='Key' placeholder='Key' value={data.key} onChange={(event) => handleEditChange(event, 'key')} />\n          </InputGroup>\n        </div>\n        <div className='mb-1'>\n          <Label for='Value'>* Value</Label>\n          <InputGroup>\n            <InputGroupText>\n              <Info size={15} />\n            </InputGroupText>\n            <Input id='Value' placeholder='Value' value={data.value} onChange={(event) => handleEditChange(event, 'value')} />\n          </InputGroup>\n        </div>\n        <div className='mb-1'>\n          <Label for='description'>Description</Label>\n          <InputGroup>\n            <InputGroupText>\n              <AlignCenter size={15} />\n            </InputGroupText>\n            <Input id='description' placeholder='Description' value={data.description} onChange={(event) => handleEditChange(event, 'description')} />\n          </InputGroup>\n        </div>\n        <Button className='mr-1' color='primary' onClick={handleSubmitModal}>\n          Submit\n        </Button>\n        <Button color='secondary' onClick={handleModal} outline>\n          Cancel\n        </Button>\n      </ModalBody>\n    </Modal>\n  )\n}\n\nexport default AddNewModal\n","// ** React Imports\nimport { Fragment, useState, useEffect, memo } from 'react'\n\n// ** Store & Actions\nimport { getData, addEvent, updateEvent, deleteEvent } from './store'\nimport { useSelector, useDispatch } from 'react-redux'\n\n// ** Third Party Components\nimport ReactPaginate from 'react-paginate'\nimport { Plus, Edit, MoreVertical, Trash, ChevronDown, ChevronUp } from 'react-feather'\n\n// ** Reactstrap Imports\nimport {\n  Card, CardHeader, CardTitle, Input, Label, Row, Col, Button,\n  Table, UncontrolledDropdown, DropdownMenu, DropdownItem, DropdownToggle\n} from 'reactstrap'\n\nimport AddNewModal from './AddNewModal'\nimport Loading from 'react-loading-components'\n\nconst Datatable = () => {\n  // ** Store Vars\n  const dispatch = useDispatch()\n  const store = useSelector(state => state.setting)\n\n  // ** States\n  const [loading, setLoading] = useState(false)\n  const [modal, setModal] = useState(false)\n  const [mode, setMode] = useState(\"NEW\")\n  const [filter, setFilter] = useState({\n    currentPage: 1,\n    column: 'key',\n    direction: 'asc',\n    rowsPerPage: 7,\n    searchValue: ''\n  })\n\n  const [data, setData] = useState(\n    {\n      id: \"\",\n      key: \"\",\n      value: \"\",\n      description: \"\"\n    }\n  )\n\n  const count = Math.ceil(store.total / filter.rowsPerPage)\n\n  // ** Get data on mount\n  useEffect(() => {\n    dispatch(\n      getData(filter)\n    )\n  }, [dispatch])\n\n  // ** Function to handle filter\n  const handleFilter = e => {\n    const filterData = {\n      ...filter,\n      searchValue: e.target.value,\n      currentPage: 1\n    }\n    setFilter(filterData)\n\n    dispatch(\n      getData(filterData)\n    )\n  }\n\n  // ** Function to handle Pagination and get data\n  const handlePagination = page => {\n    const filterData = {\n      ...filter,\n      currentPage: page.selected + 1\n    }\n    setFilter(filterData)\n    dispatch(\n      getData(filterData)\n    )\n  }\n\n  // ** Function to handle per page\n  const handlePerPage = e => {\n    const filterData = {\n      ...filter,\n      currentPage: 1,\n      rowsPerPage: parseInt(e.target.value)\n    }\n\n    setFilter(filterData)\n    dispatch(\n      getData(filterData)\n    )\n  }\n\n  const handleSort = (column) => {\n    if (filter.column === column) {\n      const filterData = {\n        ...filter,\n        currentPage: 1,\n        column,\n        direction: filter.direction === \"asc\" ? \"desc\" : \"asc\"\n      }\n      setFilter(filterData)\n      dispatch(\n        getData(filterData)\n      )\n    } else {\n      const filterData = {\n        ...filter,\n        currentPage: 1,\n        column,\n        direction: \"asc\"\n      }\n      setFilter(filterData)\n      dispatch(\n        getData(filterData)\n      )\n    }\n  }\n\n  // Custom Functions\n\n  // ** Function to handle Modal toggle\n  const handleModal = () => setModal(!modal)\n\n\n  const handleEditChange = (event, type) => {\n    switch (type) {\n      case \"key\":\n      case \"value\":\n      case \"description\":\n      default:\n        setData({\n          ...data,\n          [type]: event.target.value\n        })\n    }\n  }\n\n  const handleNewModal = () => {\n    setData({\n      id: \"\",\n      key: \"\",\n      value: \"\",\n      description: \"\"\n    })\n    setMode(\"NEW\")\n    handleModal()\n  }\n\n  const handleEditRow = (event, id) => {\n    event.preventDefault()\n    setData({\n      ...store.data[id]\n    })\n    setMode(\"EDIT\")\n    handleModal()\n  }\n\n  const handleDeleteRow = (event, id) => {\n    event.preventDefault()\n\n    if (confirm(\"Do you want to delete this row?\")) {\n      dispatch(\n        deleteEvent(store.data[id].id)\n      )\n    }\n  }\n\n  const handleSubmitModal = () => {\n    setLoading(true)\n    if (mode === \"NEW\") {\n      dispatch(\n        addEvent(data)\n      )\n\n      handleModal()\n    } else {\n      dispatch(\n        updateEvent(data)\n      )\n      handleModal()\n    }\n    setLoading(false)\n  }\n  return (\n    <Fragment>\n      <Card>\n        <CardHeader className='border-bottom'>\n          <CardTitle tag='h4'>Settings</CardTitle>\n          <div className='d-flex mt-md-0 mt-1'>\n            <Button className='ml-2' color='primary' onClick={handleNewModal}>\n              <Plus size={15} />\n              <span className='align-middle ml-50'>Add Record</span>\n            </Button>\n          </div>\n        </CardHeader>\n        <Row className='mx-0 mt-1 mb-50'>\n          <Col sm='6'>\n            <div className='d-flex align-items-center'>\n              <Label for='sort-select'>show</Label>\n              <Input\n                className='dataTable-select'\n                type='select'\n                id='sort-select'\n                value={filter.rowsPerPage}\n                onChange={e => handlePerPage(e)}\n              >\n                <option value={7}>7</option>\n                <option value={10}>10</option>\n                <option value={25}>25</option>\n                <option value={50}>50</option>\n                <option value={75}>75</option>\n                <option value={100}>100</option>\n              </Input>\n              <Label for='sort-select'>entries</Label>\n            </div>\n          </Col>\n          <Col className='d-flex align-items-center justify-content-sm-end mt-sm-0 mt-1' sm='6'>\n            <Label className='me-1' for='search-input'>\n              Search\n            </Label>\n            <Input\n              className='dataTable-filter'\n              type='text'\n              bsSize='sm'\n              id='search-input'\n              value={filter.searchValue}\n              onChange={handleFilter}\n            />\n          </Col>\n        </Row>\n        <Table striped responsive>\n          <thead>\n            <tr>\n              <th style={{ whiteSpace: \"nowrap\", cursor: \"pointer\" }} onClick={() => handleSort(\"key\")} >\n                Key {filter.column === \"key\" ? (filter.direction === \"desc\" ? <ChevronUp size={20} /> : <ChevronDown size={20} />) : \"\"}\n              </th>\n              <th style={{ whiteSpace: \"nowrap\", cursor: \"pointer\" }} onClick={() => handleSort(\"value\")}>\n                Value  {filter.column === \"value\" ? (filter.direction === \"desc\" ? <ChevronUp size={20} /> : <ChevronDown size={20} />) : \"\"}\n              </th>\n              <th>Actions</th>\n            </tr>\n          </thead>\n          <tbody>\n            {\n              store.data.map((element, index) => (\n                <tr key={index}>\n                  <td>\n                    <span className='align-middle font-weight-bold'>{element.key}</span>\n                  </td>\n                  <td> {element.value} </td>\n                  <td>\n                    <UncontrolledDropdown>\n                      <DropdownToggle className='icon-btn hide-arrow' color='transparent' size='sm' caret>\n                        <MoreVertical size={15} />\n                      </DropdownToggle>\n                      <DropdownMenu>\n                        <DropdownItem href='/' onClick={(event) => handleEditRow(event, index)}>\n                          <Edit className='mr-50' size={15} /> <span className='align-middle'>Edit</span>\n                        </DropdownItem>\n                        <DropdownItem href='/' onClick={(event) => handleDeleteRow(event, index)}>\n                          <Trash className='mr-50' size={15} /> <span className='align-middle'>Delete</span>\n                        </DropdownItem>\n                      </DropdownMenu>\n                    </UncontrolledDropdown>\n                  </td>\n                </tr>\n              )\n              )\n            }\n          </tbody>\n        </Table>\n        <ReactPaginate\n          previousLabel={''}\n          nextLabel={''}\n          breakLabel='...'\n          pageCount={count || 1}\n          marginPagesDisplayed={2}\n          pageRangeDisplayed={2}\n          activeClassName='active'\n          forcePage={filter.currentPage !== 0 ? filter.currentPage - 1 : 0}\n          onPageChange={page => handlePagination(page)}\n          pageClassName='page-item'\n          breakClassName='page-item'\n          nextLinkClassName='page-link'\n          pageLinkClassName='page-link'\n          breakLinkClassName='page-link'\n          previousLinkClassName='page-link'\n          nextClassName='page-item next-item'\n          previousClassName='page-item prev-item'\n          containerClassName={\n            'pagination react-paginate separated-pagination pagination-sm justify-content-end pe-1 mt-1'\n          }\n        />\n      </Card>\n      <AddNewModal\n        open={modal}\n        handleModal={handleModal}\n        mode={mode}\n        data={data}\n        handleEditChange={handleEditChange}\n        handleSubmitModal={handleSubmitModal}\n      />\n      {\n        loading && <div style={{ position: 'absolute', top: '0px', left: '0px', width: '100%', height: '100%', backgroundColor: '#fff', opacity: '0.5', zIndex: '10000' }}>\n        <div \n          style={{\n            position: 'fixed',\n            top: 'calc(50vh - 50px)',\n            left: 'calc(50vw - 50px)'\n          }}\n        >\n            <Loading type='puff' width={100} height={100} fill='#7367f0'/>\n        </div>\n      </div>\n      }\n    </Fragment>\n  )\n}\n\nexport default memo(Datatable)\n","// ** React Imports\nimport { Fragment } from 'react'\n\n// ** Third Party Components\nimport { Row, Col } from 'reactstrap'\n\n// ** Demo Components\nimport Datatable from './Datatable'\nimport Deposit from './Deposit'\n\n// ** Styles\nimport '@styles/react/libs/tables/react-dataTable-component.scss'\n\nconst Tables = () => {\n  return (\n    <Fragment>\n      <Row>\n        <Col sm='12'>\n          {/* <Deposit /> */}\n          <Datatable />\n        </Col>\n      </Row>\n    </Fragment>\n  )\n}\n\nexport default Tables\n"],"sourceRoot":""}